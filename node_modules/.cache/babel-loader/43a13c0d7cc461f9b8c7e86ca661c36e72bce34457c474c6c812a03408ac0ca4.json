{"ast":null,"code":"var _jsxFileName = \"/Users/travisliu/Playground/ride-the-bus/src/components/Button.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button(_ref) {\n  let {\n    option,\n    handleGuess,\n    status\n  } = _ref;\n  const statusToBoolean = status => {\n    if (status === 'correct' || status === 'incorrect') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  let buttonStatus = statusToBoolean(status);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"bg-blue-500 rounded w-40 h-12 m-4 text-white shadow-lg hover:bg-blue-600\",\n    onClick: () => handleGuess(option),\n    disabled: buttonStatus,\n    children: option\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["Button","option","handleGuess","status","statusToBoolean","buttonStatus"],"sources":["/Users/travisliu/Playground/ride-the-bus/src/components/Button.tsx"],"sourcesContent":["type Props={\n  option: string,\n  handleGuess: any,\n  status: string,\n}\n\nexport default function Button({option, handleGuess, status}:Props) {\n\n  const statusToBoolean = (status: string) => {\n    if (status === 'correct' || status === 'incorrect') {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  let buttonStatus = statusToBoolean(status);\n\n  return (\n\n    <button className=\"bg-blue-500 rounded w-40 h-12 m-4 text-white shadow-lg hover:bg-blue-600\" onClick={()=> handleGuess(option)} disabled={buttonStatus}>\n      {option}\n    </button>\n\n\n  )\n}"],"mappings":";;AAMA,eAAe,SAASA,MAAM,OAAsC;EAAA,IAArC;IAACC,MAAM;IAAEC,WAAW;IAAEC;EAAY,CAAC;EAEhE,MAAMC,eAAe,GAAID,MAAc,IAAK;IAC1C,IAAIA,MAAM,KAAK,SAAS,IAAIA,MAAM,KAAK,WAAW,EAAE;MAClD,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF,CAAC;EAED,IAAIE,YAAY,GAAGD,eAAe,CAACD,MAAM,CAAC;EAE1C,oBAEE;IAAQ,SAAS,EAAC,0EAA0E;IAAC,OAAO,EAAE,MAAKD,WAAW,CAACD,MAAM,CAAE;IAAC,QAAQ,EAAEI,YAAa;IAAA,UACpJJ;EAAM;IAAA;IAAA;IAAA;EAAA,QACA;AAIb;AAAC,KApBuBD,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}